name: Test GitHub Agent Action

on:
  issues:
    types: [opened, edited, reopened]
  workflow_dispatch:  # 允许手动触发测试

jobs:
  test-issue-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Ripgrep
        run: sudo apt-get update && sudo apt-get install -y ripgrep

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install workspace dependencies
        run: pnpm install

      - name: Build packages in correct order
        run: |
          pnpm --filter worker-core build
          pnpm --filter worker-protobuf build
          pnpm --filter context-worker build
          pnpm --filter github-agent build
          pnpm --filter github-agent-action build

      - name: Test GitHub Agent Action
        uses: ./packages/github-agent-action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          workspace-path: ${{ github.workspace }}
          analysis-depth: medium
          auto-comment: true
          auto-label: true
          exclude-labels: 'wontfix,duplicate'
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          deepseek-token: ${{ secrets.DEEPSEEK_TOKEN }}
          glm-token: ${{ secrets.GLM_TOKEN }}

  manual-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install workspace dependencies
        run: pnpm install

      - name: Build packages in correct order
        run: |
          pnpm --filter worker-core build
          pnpm --filter worker-protobuf build
          pnpm --filter context-worker build
          pnpm --filter github-agent build
          pnpm --filter github-agent-action build
      
      - name: Manual Test - Analyze Issue #98 (Architecture Request)
        run: |
          cd packages/github-agent-action
          # 分析 issue #98 - 测试 LLM 增强的架构分析功能
          echo "🧪 Testing LLM-enhanced analysis on issue #98"
          echo "📋 Issue: [TEST] generate project architecture"
          echo "🎯 Expected: Smart label suggestions, contextual file analysis"
          echo ""

          node bin/action.js analyze \
            --owner unit-mesh \
            --repo autodev-workbench \
            --issue 98 \
            --depth medium \
            --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DEEPSEEK_TOKEN: ${{ secrets.DEEPSEEK_TOKEN }}
          GLM_TOKEN: ${{ secrets.GLM_TOKEN }}
          VERBOSE_LLM_LOGS: 'true'  # 启用详细的 LLM 日志

      - name: Test LLM Enhancement Demo
        run: |
          echo "🎭 Running LLM Enhancement Demonstration"
          node test-llm-analysis.js
          echo ""
          echo "🎯 Running Simulated LLM Analysis"
          node simulate-llm-analysis.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DEEPSEEK_TOKEN: ${{ secrets.DEEPSEEK_TOKEN }}
          GLM_TOKEN: ${{ secrets.GLM_TOKEN }}
