name: Test GitHub Agent Action

on:
  issues:
    types: [opened, edited, reopened]
  workflow_dispatch:  # 允许手动触发测试

jobs:
  test-issue-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install workspace dependencies
        run: pnpm install

      - name: Build packages in correct order
        run: |
          pnpm --filter worker-core build
          pnpm --filter worker-protobuf build
          pnpm --filter context-worker build
          pnpm --filter github-agent build
          pnpm --filter github-agent-action build

      - name: Test GitHub Agent Action
        uses: ./packages/github-agent-action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          workspace-path: ${{ github.workspace }}
          analysis-depth: medium
          auto-comment: true
          auto-label: true
          exclude-labels: 'wontfix,duplicate'
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          deepseek-token: ${{ secrets.DEEPSEEK_TOKEN }}
          glm-token: ${{ secrets.GLM_TOKEN }}

  manual-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install workspace dependencies
        run: pnpm install

      - name: Build packages in correct order
        run: |
          pnpm --filter worker-core build
          pnpm --filter worker-protobuf build
          pnpm --filter context-worker build
          pnpm --filter github-agent build
          pnpm --filter github-agent-action build
      
      - name: Manual Test - Analyze Existing Issue
        run: |
          cd packages/github-agent-action
          # 分析一个现有的 issue（请替换为实际的 issue 编号）
          node bin/action.js analyze \
            --owner ${{ github.repository_owner }} \
            --repo ${{ github.event.repository.name }} \
            --issue 1 \
            --depth medium \
            --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DEEPSEEK_TOKEN: ${{ secrets.DEEPSEEK_TOKEN }}
          GLM_TOKEN: ${{ secrets.GLM_TOKEN }}
